""" 
Бинарный поиск
● Контекст
Предположим, что мы хотим найти элемент в массиве (получить
его индекс). Мы можем это сделать просто перебрав все элементы.
Но что, если массив уже отсортирован? В этом случае можно
использовать бинарный поиск. Принцип прост: сначала берём
элемент находящийся посередине и сравниваем с тем, который мы
хотим найти. Если центральный элемент больше нашего,
рассматриваем массив слева от центрального, а если больше -
справа и повторяем так до тех пор, пока не найдем наш элемент.
● Ваша задача
Написать программу на любом языке в любой парадигме для
бинарного поиска. На вход подаётся целочисленный массив и
число. На выходе - индекс элемента или -1, в случае если искомого
элемента нет в массиве. 
"""

def binary_search(num_list, number):
    first = 0
    last = len(num_list) - 1
    while first <= last:
        middle = first + (last - first) // 2
        if num_list[middle] == number:
            return middle
        elif num_list[middle] < number:
            first = middle + 1
        else:
            last = middle - 1
    return -1
    

num_list = [0, 4, 9, 12, 18, 22, 43]
number = 12
print('Search index =',binary_search(num_list, number))

""" 
Данный код написан в императивном стиле.
Здесь ипользуется процедурная парадигма, так как блок кода обернут в функцию.
А так же структурная парадигма, так как присутствуют управляющие конструкции: цикл (while), ветвление (if-else) и не используется оператор goto.
 """